// Code generated by protoc-gen-go.
// source: google/api/servicemanagement/v1/servicemanager.proto
// DO NOT EDIT!

package servicemanagement

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_api21 "google.golang.org/genproto/googleapis/api/serviceconfig"
import google_longrunning "google.golang.org/genproto/googleapis/longrunning"
import google_protobuf1 "github.com/golang/protobuf/ptypes/any"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/protobuf/field_mask"
import _ "github.com/golang/protobuf/ptypes/struct"
import _ "google.golang.org/genproto/googleapis/rpc/status"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Request message for `ListServices` method.
type ListServicesRequest struct {
	// Include services produced by the specified project.
	ProducerProjectId string `protobuf:"bytes,1,opt,name=producer_project_id,json=producerProjectId" json:"producer_project_id,omitempty"`
	// Requested size of the next page of data.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Token identifying which result to start with; returned by a previous list
	// call.
	PageToken string `protobuf:"bytes,6,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListServicesRequest) Reset()                    { *m = ListServicesRequest{} }
func (m *ListServicesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListServicesRequest) ProtoMessage()               {}
func (*ListServicesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ListServicesRequest) GetProducerProjectId() string {
	if m != nil {
		return m.ProducerProjectId
	}
	return ""
}

func (m *ListServicesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListServicesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response message for `ListServices` method.
type ListServicesResponse struct {
	// The results of the query.
	Services []*ManagedService `protobuf:"bytes,1,rep,name=services" json:"services,omitempty"`
	// Token that can be passed to `ListServices` to resume a paginated query.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListServicesResponse) Reset()                    { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()               {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ListServicesResponse) GetServices() []*ManagedService {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *ListServicesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for `GetService` method.
type GetServiceRequest struct {
	// The name of the service.  See the `ServiceManager` overview for naming
	// requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
}

func (m *GetServiceRequest) Reset()                    { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()               {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

// Request message for CreateService method.
type CreateServiceRequest struct {
	// Initial values for the service resource.
	Service *ManagedService `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *CreateServiceRequest) Reset()                    { *m = CreateServiceRequest{} }
func (m *CreateServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceRequest) ProtoMessage()               {}
func (*CreateServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CreateServiceRequest) GetService() *ManagedService {
	if m != nil {
		return m.Service
	}
	return nil
}

// Request message for DeleteService method.
type DeleteServiceRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
}

func (m *DeleteServiceRequest) Reset()                    { *m = DeleteServiceRequest{} }
func (m *DeleteServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteServiceRequest) ProtoMessage()               {}
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DeleteServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

// Request message for UndeleteService method.
type UndeleteServiceRequest struct {
	// The name of the service. See the [overview](/service-management/overview)
	// for naming requirements. For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
}

func (m *UndeleteServiceRequest) Reset()                    { *m = UndeleteServiceRequest{} }
func (m *UndeleteServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*UndeleteServiceRequest) ProtoMessage()               {}
func (*UndeleteServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *UndeleteServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

// Response message for UndeleteService method.
type UndeleteServiceResponse struct {
	// Revived service resource.
	Service *ManagedService `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *UndeleteServiceResponse) Reset()                    { *m = UndeleteServiceResponse{} }
func (m *UndeleteServiceResponse) String() string            { return proto.CompactTextString(m) }
func (*UndeleteServiceResponse) ProtoMessage()               {}
func (*UndeleteServiceResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *UndeleteServiceResponse) GetService() *ManagedService {
	if m != nil {
		return m.Service
	}
	return nil
}

// Request message for GetServiceConfig method.
type GetServiceConfigRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	ConfigId    string `protobuf:"bytes,2,opt,name=config_id,json=configId" json:"config_id,omitempty"`
}

func (m *GetServiceConfigRequest) Reset()                    { *m = GetServiceConfigRequest{} }
func (m *GetServiceConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetServiceConfigRequest) ProtoMessage()               {}
func (*GetServiceConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *GetServiceConfigRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GetServiceConfigRequest) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

// Request message for ListServiceConfigs method.
type ListServiceConfigsRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The token of the page to retrieve.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	// The max number of items to include in the response list.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListServiceConfigsRequest) Reset()                    { *m = ListServiceConfigsRequest{} }
func (m *ListServiceConfigsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListServiceConfigsRequest) ProtoMessage()               {}
func (*ListServiceConfigsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ListServiceConfigsRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ListServiceConfigsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListServiceConfigsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Response message for ListServiceConfigs method.
type ListServiceConfigsResponse struct {
	// The list of service configuration resources.
	ServiceConfigs []*google_api21.Service `protobuf:"bytes,1,rep,name=service_configs,json=serviceConfigs" json:"service_configs,omitempty"`
	// The token of the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListServiceConfigsResponse) Reset()                    { *m = ListServiceConfigsResponse{} }
func (m *ListServiceConfigsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListServiceConfigsResponse) ProtoMessage()               {}
func (*ListServiceConfigsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ListServiceConfigsResponse) GetServiceConfigs() []*google_api21.Service {
	if m != nil {
		return m.ServiceConfigs
	}
	return nil
}

func (m *ListServiceConfigsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for CreateServiceConfig method.
type CreateServiceConfigRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The service configuration resource.
	ServiceConfig *google_api21.Service `protobuf:"bytes,2,opt,name=service_config,json=serviceConfig" json:"service_config,omitempty"`
}

func (m *CreateServiceConfigRequest) Reset()                    { *m = CreateServiceConfigRequest{} }
func (m *CreateServiceConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceConfigRequest) ProtoMessage()               {}
func (*CreateServiceConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *CreateServiceConfigRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *CreateServiceConfigRequest) GetServiceConfig() *google_api21.Service {
	if m != nil {
		return m.ServiceConfig
	}
	return nil
}

// Request message for SubmitConfigSource method.
type SubmitConfigSourceRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The source configuration for the service.
	ConfigSource *ConfigSource `protobuf:"bytes,2,opt,name=config_source,json=configSource" json:"config_source,omitempty"`
	// Optional. If set, this will result in the generation of a
	// `google.api.Service` configuration based on the `ConfigSource` provided,
	// but the generated config and the sources will NOT be persisted.
	ValidateOnly bool `protobuf:"varint,3,opt,name=validate_only,json=validateOnly" json:"validate_only,omitempty"`
}

func (m *SubmitConfigSourceRequest) Reset()                    { *m = SubmitConfigSourceRequest{} }
func (m *SubmitConfigSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*SubmitConfigSourceRequest) ProtoMessage()               {}
func (*SubmitConfigSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *SubmitConfigSourceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *SubmitConfigSourceRequest) GetConfigSource() *ConfigSource {
	if m != nil {
		return m.ConfigSource
	}
	return nil
}

func (m *SubmitConfigSourceRequest) GetValidateOnly() bool {
	if m != nil {
		return m.ValidateOnly
	}
	return false
}

// Response message for SubmitConfigSource method.
type SubmitConfigSourceResponse struct {
	// The generated service configuration.
	ServiceConfig *google_api21.Service `protobuf:"bytes,1,opt,name=service_config,json=serviceConfig" json:"service_config,omitempty"`
}

func (m *SubmitConfigSourceResponse) Reset()                    { *m = SubmitConfigSourceResponse{} }
func (m *SubmitConfigSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*SubmitConfigSourceResponse) ProtoMessage()               {}
func (*SubmitConfigSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *SubmitConfigSourceResponse) GetServiceConfig() *google_api21.Service {
	if m != nil {
		return m.ServiceConfig
	}
	return nil
}

// Request message for 'CreateServiceRollout'
type CreateServiceRolloutRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The rollout resource. The `service_name` field is output only.
	Rollout *Rollout `protobuf:"bytes,2,opt,name=rollout" json:"rollout,omitempty"`
}

func (m *CreateServiceRolloutRequest) Reset()                    { *m = CreateServiceRolloutRequest{} }
func (m *CreateServiceRolloutRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceRolloutRequest) ProtoMessage()               {}
func (*CreateServiceRolloutRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *CreateServiceRolloutRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *CreateServiceRolloutRequest) GetRollout() *Rollout {
	if m != nil {
		return m.Rollout
	}
	return nil
}

// Request message for 'ListServiceRollouts'
type ListServiceRolloutsRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The token of the page to retrieve.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	// The max number of items to include in the response list.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
}

func (m *ListServiceRolloutsRequest) Reset()                    { *m = ListServiceRolloutsRequest{} }
func (m *ListServiceRolloutsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListServiceRolloutsRequest) ProtoMessage()               {}
func (*ListServiceRolloutsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ListServiceRolloutsRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ListServiceRolloutsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListServiceRolloutsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Response message for ListServiceRollouts method.
type ListServiceRolloutsResponse struct {
	// The list of rollout resources.
	Rollouts []*Rollout `protobuf:"bytes,1,rep,name=rollouts" json:"rollouts,omitempty"`
	// The token of the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListServiceRolloutsResponse) Reset()                    { *m = ListServiceRolloutsResponse{} }
func (m *ListServiceRolloutsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListServiceRolloutsResponse) ProtoMessage()               {}
func (*ListServiceRolloutsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *ListServiceRolloutsResponse) GetRollouts() []*Rollout {
	if m != nil {
		return m.Rollouts
	}
	return nil
}

func (m *ListServiceRolloutsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for GetServiceRollout method.
type GetServiceRolloutRequest struct {
	// The name of the service.  See the [overview](/service-management/overview)
	// for naming requirements.  For example: `example.googleapis.com`.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The id of the rollout resource.
	RolloutId string `protobuf:"bytes,2,opt,name=rollout_id,json=rolloutId" json:"rollout_id,omitempty"`
}

func (m *GetServiceRolloutRequest) Reset()                    { *m = GetServiceRolloutRequest{} }
func (m *GetServiceRolloutRequest) String() string            { return proto.CompactTextString(m) }
func (*GetServiceRolloutRequest) ProtoMessage()               {}
func (*GetServiceRolloutRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *GetServiceRolloutRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GetServiceRolloutRequest) GetRolloutId() string {
	if m != nil {
		return m.RolloutId
	}
	return ""
}

// Request message for EnableService method.
type EnableServiceRequest struct {
	// Name of the service to enable. Specifying an unknown service name will
	// cause the request to fail.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The identity of consumer resource which service enablement will be
	// applied to.
	//
	// The Google Service Management implementation accepts the following
	// forms: "project:<project_id>", "project_number:<project_number>".
	//
	// Note: this is made compatible with
	// google.api.servicecontrol.v1.Operation.consumer_id.
	ConsumerId string `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
}

func (m *EnableServiceRequest) Reset()                    { *m = EnableServiceRequest{} }
func (m *EnableServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*EnableServiceRequest) ProtoMessage()               {}
func (*EnableServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *EnableServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *EnableServiceRequest) GetConsumerId() string {
	if m != nil {
		return m.ConsumerId
	}
	return ""
}

// Request message for DisableService method.
type DisableServiceRequest struct {
	// Name of the service to disable. Specifying an unknown service name
	// will cause the request to fail.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// The identity of consumer resource which service disablement will be
	// applied to.
	//
	// The Google Service Management implementation accepts the following
	// forms: "project:<project_id>", "project_number:<project_number>".
	//
	// Note: this is made compatible with
	// google.api.servicecontrol.v1.Operation.consumer_id.
	ConsumerId string `protobuf:"bytes,2,opt,name=consumer_id,json=consumerId" json:"consumer_id,omitempty"`
}

func (m *DisableServiceRequest) Reset()                    { *m = DisableServiceRequest{} }
func (m *DisableServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*DisableServiceRequest) ProtoMessage()               {}
func (*DisableServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *DisableServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *DisableServiceRequest) GetConsumerId() string {
	if m != nil {
		return m.ConsumerId
	}
	return ""
}

// Request message for GenerateConfigReport method.
type GenerateConfigReportRequest struct {
	// Service configuration for which we want to generate the report.
	// For this version of API, the supported types are
	// [google.api.servicemanagement.v1.ConfigRef][google.api.servicemanagement.v1.ConfigRef],
	// [google.api.servicemanagement.v1.ConfigSource][google.api.servicemanagement.v1.ConfigSource],
	// and [google.api.Service][google.api.Service]
	NewConfig *google_protobuf1.Any `protobuf:"bytes,1,opt,name=new_config,json=newConfig" json:"new_config,omitempty"`
	// Service configuration against which the comparison will be done.
	// For this version of API, the supported types are
	// [google.api.servicemanagement.v1.ConfigRef][google.api.servicemanagement.v1.ConfigRef],
	// [google.api.servicemanagement.v1.ConfigSource][google.api.servicemanagement.v1.ConfigSource],
	// and [google.api.Service][google.api.Service]
	OldConfig *google_protobuf1.Any `protobuf:"bytes,2,opt,name=old_config,json=oldConfig" json:"old_config,omitempty"`
}

func (m *GenerateConfigReportRequest) Reset()                    { *m = GenerateConfigReportRequest{} }
func (m *GenerateConfigReportRequest) String() string            { return proto.CompactTextString(m) }
func (*GenerateConfigReportRequest) ProtoMessage()               {}
func (*GenerateConfigReportRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *GenerateConfigReportRequest) GetNewConfig() *google_protobuf1.Any {
	if m != nil {
		return m.NewConfig
	}
	return nil
}

func (m *GenerateConfigReportRequest) GetOldConfig() *google_protobuf1.Any {
	if m != nil {
		return m.OldConfig
	}
	return nil
}

// Response message for GenerateConfigReport method.
type GenerateConfigReportResponse struct {
	// Name of the service this report belongs to.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	// ID of the service configuration this report belongs to.
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// list of ChangeReport, each corresponding to comparison between two
	// service configurations.
	ChangeReports []*ChangeReport `protobuf:"bytes,3,rep,name=change_reports,json=changeReports" json:"change_reports,omitempty"`
	// Errors / Linter warnings associated with the service definition this
	// report
	// belongs to.
	Diagnostics []*Diagnostic `protobuf:"bytes,4,rep,name=diagnostics" json:"diagnostics,omitempty"`
}

func (m *GenerateConfigReportResponse) Reset()                    { *m = GenerateConfigReportResponse{} }
func (m *GenerateConfigReportResponse) String() string            { return proto.CompactTextString(m) }
func (*GenerateConfigReportResponse) ProtoMessage()               {}
func (*GenerateConfigReportResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *GenerateConfigReportResponse) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GenerateConfigReportResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GenerateConfigReportResponse) GetChangeReports() []*ChangeReport {
	if m != nil {
		return m.ChangeReports
	}
	return nil
}

func (m *GenerateConfigReportResponse) GetDiagnostics() []*Diagnostic {
	if m != nil {
		return m.Diagnostics
	}
	return nil
}

func init() {
	proto.RegisterType((*ListServicesRequest)(nil), "google.api.servicemanagement.v1.ListServicesRequest")
	proto.RegisterType((*ListServicesResponse)(nil), "google.api.servicemanagement.v1.ListServicesResponse")
	proto.RegisterType((*GetServiceRequest)(nil), "google.api.servicemanagement.v1.GetServiceRequest")
	proto.RegisterType((*CreateServiceRequest)(nil), "google.api.servicemanagement.v1.CreateServiceRequest")
	proto.RegisterType((*DeleteServiceRequest)(nil), "google.api.servicemanagement.v1.DeleteServiceRequest")
	proto.RegisterType((*UndeleteServiceRequest)(nil), "google.api.servicemanagement.v1.UndeleteServiceRequest")
	proto.RegisterType((*UndeleteServiceResponse)(nil), "google.api.servicemanagement.v1.UndeleteServiceResponse")
	proto.RegisterType((*GetServiceConfigRequest)(nil), "google.api.servicemanagement.v1.GetServiceConfigRequest")
	proto.RegisterType((*ListServiceConfigsRequest)(nil), "google.api.servicemanagement.v1.ListServiceConfigsRequest")
	proto.RegisterType((*ListServiceConfigsResponse)(nil), "google.api.servicemanagement.v1.ListServiceConfigsResponse")
	proto.RegisterType((*CreateServiceConfigRequest)(nil), "google.api.servicemanagement.v1.CreateServiceConfigRequest")
	proto.RegisterType((*SubmitConfigSourceRequest)(nil), "google.api.servicemanagement.v1.SubmitConfigSourceRequest")
	proto.RegisterType((*SubmitConfigSourceResponse)(nil), "google.api.servicemanagement.v1.SubmitConfigSourceResponse")
	proto.RegisterType((*CreateServiceRolloutRequest)(nil), "google.api.servicemanagement.v1.CreateServiceRolloutRequest")
	proto.RegisterType((*ListServiceRolloutsRequest)(nil), "google.api.servicemanagement.v1.ListServiceRolloutsRequest")
	proto.RegisterType((*ListServiceRolloutsResponse)(nil), "google.api.servicemanagement.v1.ListServiceRolloutsResponse")
	proto.RegisterType((*GetServiceRolloutRequest)(nil), "google.api.servicemanagement.v1.GetServiceRolloutRequest")
	proto.RegisterType((*EnableServiceRequest)(nil), "google.api.servicemanagement.v1.EnableServiceRequest")
	proto.RegisterType((*DisableServiceRequest)(nil), "google.api.servicemanagement.v1.DisableServiceRequest")
	proto.RegisterType((*GenerateConfigReportRequest)(nil), "google.api.servicemanagement.v1.GenerateConfigReportRequest")
	proto.RegisterType((*GenerateConfigReportResponse)(nil), "google.api.servicemanagement.v1.GenerateConfigReportResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ServiceManager service

type ServiceManagerClient interface {
	// Lists all managed services.
	ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	// Gets a managed service.
	GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*ManagedService, error)
	// Creates a new managed service.
	// Please note one producer project can own no more than 20 services.
	//
	// Operation<response: ManagedService>
	CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
	// Deletes a managed service. This method will change the serivce in the
	// `Soft-Delete` state for 30 days. Within this period, service producers may
	// call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
	// After 30 days, the service will be permanently deleted.
	//
	// Operation<response: google.protobuf.Empty>
	DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
	// Revives a previously deleted managed service. The method restores the
	// service using the configuration at the time the service was deleted.
	// The target service must exist and must have been deleted within the
	// last 30 days.
	//
	// Operation<response: UndeleteServiceResponse>
	UndeleteService(ctx context.Context, in *UndeleteServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
	// Lists the history of the service configuration for a managed service,
	// from the newest to the oldest.
	ListServiceConfigs(ctx context.Context, in *ListServiceConfigsRequest, opts ...grpc.CallOption) (*ListServiceConfigsResponse, error)
	// Gets a service configuration (version) for a managed service.
	GetServiceConfig(ctx context.Context, in *GetServiceConfigRequest, opts ...grpc.CallOption) (*google_api21.Service, error)
	// Creates a new service configuration (version) for a managed service.
	// This method only stores the service configuration. To roll out the service
	// configuration to backend systems please call
	// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
	CreateServiceConfig(ctx context.Context, in *CreateServiceConfigRequest, opts ...grpc.CallOption) (*google_api21.Service, error)
	// Creates a new service configuration (version) for a managed service based
	// on
	// user-supplied configuration source files (for example: OpenAPI
	// Specification). This method stores the source configurations as well as the
	// generated service configuration. To rollout the service configuration to
	// other services,
	// please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
	//
	// Operation<response: SubmitConfigSourceResponse>
	SubmitConfigSource(ctx context.Context, in *SubmitConfigSourceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
	// Lists the history of the service configuration rollouts for a managed
	// service, from the newest to the oldest.
	ListServiceRollouts(ctx context.Context, in *ListServiceRolloutsRequest, opts ...grpc.CallOption) (*ListServiceRolloutsResponse, error)
	// Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
	GetServiceRollout(ctx context.Context, in *GetServiceRolloutRequest, opts ...grpc.CallOption) (*Rollout, error)
	// Creates a new service configuration rollout. Based on rollout, the
	// Google Service Management will roll out the service configurations to
	// different backend services. For example, the logging configuration will be
	// pushed to Google Cloud Logging.
	//
	// Please note that any previous pending and running Rollouts and associated
	// Operations will be automatically cancelled so that the latest Rollout will
	// not be blocked by previous Rollouts.
	//
	// Operation<response: Rollout>
	CreateServiceRollout(ctx context.Context, in *CreateServiceRolloutRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
	// Generates and returns a report (errors, warnings and changes from
	// existing configurations) associated with
	// GenerateConfigReportRequest.new_value
	//
	// If GenerateConfigReportRequest.old_value is specified,
	// GenerateConfigReportRequest will contain a single ChangeReport based on the
	// comparison between GenerateConfigReportRequest.new_value and
	// GenerateConfigReportRequest.old_value.
	// If GenerateConfigReportRequest.old_value is not specified, this method
	// will compare GenerateConfigReportRequest.new_value with the last pushed
	// service configuration.
	GenerateConfigReport(ctx context.Context, in *GenerateConfigReportRequest, opts ...grpc.CallOption) (*GenerateConfigReportResponse, error)
	// Enable a managed service for a project with default setting.
	//
	// Operation<response: EnableServiceResponse>
	//
	// [google.rpc.Status][google.rpc.Status] errors may contain a
	// [google.rpc.PreconditionFailure][] error detail.
	EnableService(ctx context.Context, in *EnableServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
	// Disable a managed service for a project.
	//
	// Operation<response: DisableServiceResponse>
	DisableService(ctx context.Context, in *DisableServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error)
}

type serviceManagerClient struct {
	cc *grpc.ClientConn
}

func NewServiceManagerClient(cc *grpc.ClientConn) ServiceManagerClient {
	return &serviceManagerClient{cc}
}

func (c *serviceManagerClient) ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/ListServices", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*ManagedService, error) {
	out := new(ManagedService)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/GetService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/CreateService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/DeleteService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) UndeleteService(ctx context.Context, in *UndeleteServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/UndeleteService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) ListServiceConfigs(ctx context.Context, in *ListServiceConfigsRequest, opts ...grpc.CallOption) (*ListServiceConfigsResponse, error) {
	out := new(ListServiceConfigsResponse)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/ListServiceConfigs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) GetServiceConfig(ctx context.Context, in *GetServiceConfigRequest, opts ...grpc.CallOption) (*google_api21.Service, error) {
	out := new(google_api21.Service)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/GetServiceConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) CreateServiceConfig(ctx context.Context, in *CreateServiceConfigRequest, opts ...grpc.CallOption) (*google_api21.Service, error) {
	out := new(google_api21.Service)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/CreateServiceConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) SubmitConfigSource(ctx context.Context, in *SubmitConfigSourceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/SubmitConfigSource", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) ListServiceRollouts(ctx context.Context, in *ListServiceRolloutsRequest, opts ...grpc.CallOption) (*ListServiceRolloutsResponse, error) {
	out := new(ListServiceRolloutsResponse)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/ListServiceRollouts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) GetServiceRollout(ctx context.Context, in *GetServiceRolloutRequest, opts ...grpc.CallOption) (*Rollout, error) {
	out := new(Rollout)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/GetServiceRollout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) CreateServiceRollout(ctx context.Context, in *CreateServiceRolloutRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/CreateServiceRollout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) GenerateConfigReport(ctx context.Context, in *GenerateConfigReportRequest, opts ...grpc.CallOption) (*GenerateConfigReportResponse, error) {
	out := new(GenerateConfigReportResponse)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/GenerateConfigReport", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) EnableService(ctx context.Context, in *EnableServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/EnableService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceManagerClient) DisableService(ctx context.Context, in *DisableServiceRequest, opts ...grpc.CallOption) (*google_longrunning.Operation, error) {
	out := new(google_longrunning.Operation)
	err := grpc.Invoke(ctx, "/google.api.servicemanagement.v1.ServiceManager/DisableService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ServiceManager service

type ServiceManagerServer interface {
	// Lists all managed services.
	ListServices(context.Context, *ListServicesRequest) (*ListServicesResponse, error)
	// Gets a managed service.
	GetService(context.Context, *GetServiceRequest) (*ManagedService, error)
	// Creates a new managed service.
	// Please note one producer project can own no more than 20 services.
	//
	// Operation<response: ManagedService>
	CreateService(context.Context, *CreateServiceRequest) (*google_longrunning.Operation, error)
	// Deletes a managed service. This method will change the serivce in the
	// `Soft-Delete` state for 30 days. Within this period, service producers may
	// call [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.
	// After 30 days, the service will be permanently deleted.
	//
	// Operation<response: google.protobuf.Empty>
	DeleteService(context.Context, *DeleteServiceRequest) (*google_longrunning.Operation, error)
	// Revives a previously deleted managed service. The method restores the
	// service using the configuration at the time the service was deleted.
	// The target service must exist and must have been deleted within the
	// last 30 days.
	//
	// Operation<response: UndeleteServiceResponse>
	UndeleteService(context.Context, *UndeleteServiceRequest) (*google_longrunning.Operation, error)
	// Lists the history of the service configuration for a managed service,
	// from the newest to the oldest.
	ListServiceConfigs(context.Context, *ListServiceConfigsRequest) (*ListServiceConfigsResponse, error)
	// Gets a service configuration (version) for a managed service.
	GetServiceConfig(context.Context, *GetServiceConfigRequest) (*google_api21.Service, error)
	// Creates a new service configuration (version) for a managed service.
	// This method only stores the service configuration. To roll out the service
	// configuration to backend systems please call
	// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
	CreateServiceConfig(context.Context, *CreateServiceConfigRequest) (*google_api21.Service, error)
	// Creates a new service configuration (version) for a managed service based
	// on
	// user-supplied configuration source files (for example: OpenAPI
	// Specification). This method stores the source configurations as well as the
	// generated service configuration. To rollout the service configuration to
	// other services,
	// please call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
	//
	// Operation<response: SubmitConfigSourceResponse>
	SubmitConfigSource(context.Context, *SubmitConfigSourceRequest) (*google_longrunning.Operation, error)
	// Lists the history of the service configuration rollouts for a managed
	// service, from the newest to the oldest.
	ListServiceRollouts(context.Context, *ListServiceRolloutsRequest) (*ListServiceRolloutsResponse, error)
	// Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].
	GetServiceRollout(context.Context, *GetServiceRolloutRequest) (*Rollout, error)
	// Creates a new service configuration rollout. Based on rollout, the
	// Google Service Management will roll out the service configurations to
	// different backend services. For example, the logging configuration will be
	// pushed to Google Cloud Logging.
	//
	// Please note that any previous pending and running Rollouts and associated
	// Operations will be automatically cancelled so that the latest Rollout will
	// not be blocked by previous Rollouts.
	//
	// Operation<response: Rollout>
	CreateServiceRollout(context.Context, *CreateServiceRolloutRequest) (*google_longrunning.Operation, error)
	// Generates and returns a report (errors, warnings and changes from
	// existing configurations) associated with
	// GenerateConfigReportRequest.new_value
	//
	// If GenerateConfigReportRequest.old_value is specified,
	// GenerateConfigReportRequest will contain a single ChangeReport based on the
	// comparison between GenerateConfigReportRequest.new_value and
	// GenerateConfigReportRequest.old_value.
	// If GenerateConfigReportRequest.old_value is not specified, this method
	// will compare GenerateConfigReportRequest.new_value with the last pushed
	// service configuration.
	GenerateConfigReport(context.Context, *GenerateConfigReportRequest) (*GenerateConfigReportResponse, error)
	// Enable a managed service for a project with default setting.
	//
	// Operation<response: EnableServiceResponse>
	//
	// [google.rpc.Status][google.rpc.Status] errors may contain a
	// [google.rpc.PreconditionFailure][] error detail.
	EnableService(context.Context, *EnableServiceRequest) (*google_longrunning.Operation, error)
	// Disable a managed service for a project.
	//
	// Operation<response: DisableServiceResponse>
	DisableService(context.Context, *DisableServiceRequest) (*google_longrunning.Operation, error)
}

func RegisterServiceManagerServer(s *grpc.Server, srv ServiceManagerServer) {
	s.RegisterService(&_ServiceManager_serviceDesc, srv)
}

func _ServiceManager_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).ListServices(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).GetService(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_CreateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).CreateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/CreateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).CreateService(ctx, req.(*CreateServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).DeleteService(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_UndeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UndeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).UndeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/UndeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).UndeleteService(ctx, req.(*UndeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_ListServiceConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceConfigsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).ListServiceConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/ListServiceConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).ListServiceConfigs(ctx, req.(*ListServiceConfigsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_GetServiceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).GetServiceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/GetServiceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).GetServiceConfig(ctx, req.(*GetServiceConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_CreateServiceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).CreateServiceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/CreateServiceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).CreateServiceConfig(ctx, req.(*CreateServiceConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_SubmitConfigSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitConfigSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).SubmitConfigSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/SubmitConfigSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).SubmitConfigSource(ctx, req.(*SubmitConfigSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_ListServiceRollouts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceRolloutsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).ListServiceRollouts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/ListServiceRollouts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).ListServiceRollouts(ctx, req.(*ListServiceRolloutsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_GetServiceRollout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRolloutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).GetServiceRollout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/GetServiceRollout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).GetServiceRollout(ctx, req.(*GetServiceRolloutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_CreateServiceRollout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceRolloutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).CreateServiceRollout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/CreateServiceRollout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).CreateServiceRollout(ctx, req.(*CreateServiceRolloutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_GenerateConfigReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateConfigReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).GenerateConfigReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/GenerateConfigReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).GenerateConfigReport(ctx, req.(*GenerateConfigReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_EnableService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).EnableService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/EnableService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).EnableService(ctx, req.(*EnableServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceManager_DisableService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceManagerServer).DisableService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.api.servicemanagement.v1.ServiceManager/DisableService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceManagerServer).DisableService(ctx, req.(*DisableServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.api.servicemanagement.v1.ServiceManager",
	HandlerType: (*ServiceManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServices",
			Handler:    _ServiceManager_ListServices_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _ServiceManager_GetService_Handler,
		},
		{
			MethodName: "CreateService",
			Handler:    _ServiceManager_CreateService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _ServiceManager_DeleteService_Handler,
		},
		{
			MethodName: "UndeleteService",
			Handler:    _ServiceManager_UndeleteService_Handler,
		},
		{
			MethodName: "ListServiceConfigs",
			Handler:    _ServiceManager_ListServiceConfigs_Handler,
		},
		{
			MethodName: "GetServiceConfig",
			Handler:    _ServiceManager_GetServiceConfig_Handler,
		},
		{
			MethodName: "CreateServiceConfig",
			Handler:    _ServiceManager_CreateServiceConfig_Handler,
		},
		{
			MethodName: "SubmitConfigSource",
			Handler:    _ServiceManager_SubmitConfigSource_Handler,
		},
		{
			MethodName: "ListServiceRollouts",
			Handler:    _ServiceManager_ListServiceRollouts_Handler,
		},
		{
			MethodName: "GetServiceRollout",
			Handler:    _ServiceManager_GetServiceRollout_Handler,
		},
		{
			MethodName: "CreateServiceRollout",
			Handler:    _ServiceManager_CreateServiceRollout_Handler,
		},
		{
			MethodName: "GenerateConfigReport",
			Handler:    _ServiceManager_GenerateConfigReport_Handler,
		},
		{
			MethodName: "EnableService",
			Handler:    _ServiceManager_EnableService_Handler,
		},
		{
			MethodName: "DisableService",
			Handler:    _ServiceManager_DisableService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/api/servicemanagement/v1/servicemanager.proto",
}

func init() {
	proto.RegisterFile("google/api/servicemanagement/v1/servicemanager.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 1343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcf, 0x6f, 0xdc, 0x44,
	0x14, 0xd6, 0x6c, 0x7f, 0x25, 0x2f, 0xd9, 0x2d, 0x9d, 0x5d, 0xc8, 0xd6, 0xdb, 0xa8, 0xa9, 0x03,
	0x25, 0x4a, 0xe9, 0x5a, 0xe9, 0x4f, 0xba, 0x29, 0x87, 0xb6, 0x41, 0x55, 0x04, 0xa5, 0xd1, 0xa6,
	0x48, 0x50, 0x90, 0x56, 0x8e, 0x3d, 0x31, 0xa6, 0xde, 0x19, 0xe3, 0xf1, 0xa6, 0x24, 0x51, 0x0e,
	0x54, 0x95, 0x90, 0xe8, 0x09, 0xf1, 0xa3, 0x12, 0x47, 0x84, 0x38, 0x70, 0xe0, 0xc2, 0x01, 0x89,
	0x03, 0x12, 0x7f, 0x03, 0xff, 0x02, 0x7f, 0x03, 0x67, 0xb4, 0xe3, 0xf1, 0xc6, 0xb3, 0xeb, 0xac,
	0xed, 0x08, 0x38, 0xfa, 0x8d, 0xbf, 0xf7, 0xbe, 0x79, 0xf3, 0xcd, 0xf3, 0xb7, 0x0b, 0x57, 0x1c,
	0xc6, 0x1c, 0x8f, 0x18, 0xa6, 0xef, 0x1a, 0x9c, 0x04, 0x5b, 0xae, 0x45, 0xba, 0x26, 0x35, 0x1d,
	0xd2, 0x25, 0x34, 0x34, 0xb6, 0x96, 0xd4, 0x60, 0xd0, 0xf4, 0x03, 0x16, 0x32, 0x7c, 0x36, 0x42,
	0x35, 0x4d, 0xdf, 0x6d, 0x8e, 0xa0, 0x9a, 0x5b, 0x4b, 0xda, 0x99, 0x44, 0x5a, 0x93, 0x52, 0x16,
	0x9a, 0xa1, 0xcb, 0x28, 0x8f, 0xe0, 0x5a, 0x7d, 0xb4, 0xa8, 0x5c, 0x31, 0xb2, 0xe8, 0x04, 0x84,
	0xb3, 0x5e, 0x60, 0x91, 0x38, 0xd5, 0xbc, 0x04, 0x78, 0x8c, 0x3a, 0x41, 0x8f, 0x52, 0x97, 0x3a,
	0x06, 0xf3, 0x49, 0xa0, 0xd4, 0x3b, 0x2d, 0x5f, 0x12, 0x4f, 0x1b, 0xbd, 0x4d, 0xc3, 0xa4, 0xdb,
	0x72, 0xa9, 0x31, 0xbc, 0x44, 0xba, 0x7e, 0x18, 0x2f, 0xce, 0x0d, 0x2f, 0x6e, 0xba, 0xc4, 0xb3,
	0x3b, 0x5d, 0x93, 0x3f, 0x92, 0x6f, 0x9c, 0x19, 0x7e, 0x83, 0x87, 0x41, 0xcf, 0x0a, 0xe5, 0xea,
	0x8c, 0x5c, 0x0d, 0x7c, 0xcb, 0xe0, 0xa1, 0x19, 0xf6, 0x24, 0x21, 0xfd, 0x33, 0x04, 0xd5, 0xb7,
	0x5d, 0x1e, 0xae, 0x47, 0x5b, 0xe4, 0x6d, 0xf2, 0x49, 0x8f, 0xf0, 0x10, 0x37, 0xa1, 0xea, 0x07,
	0xcc, 0xee, 0x59, 0x24, 0xe8, 0xf8, 0x01, 0xfb, 0x98, 0x58, 0x61, 0xc7, 0xb5, 0xeb, 0x68, 0x0e,
	0x2d, 0x4c, 0xb6, 0x4f, 0xc5, 0x4b, 0x6b, 0xd1, 0xca, 0xaa, 0x8d, 0x1b, 0x30, 0xe9, 0x9b, 0x0e,
	0xe9, 0x70, 0x77, 0x87, 0xd4, 0x8f, 0xcd, 0xa1, 0x85, 0x63, 0xed, 0x89, 0x7e, 0x60, 0xdd, 0xdd,
	0x21, 0x78, 0x16, 0x40, 0x2c, 0x86, 0xec, 0x11, 0xa1, 0xf5, 0xe3, 0x22, 0x87, 0x78, 0xfd, 0x41,
	0x3f, 0xa0, 0x3f, 0x43, 0x50, 0x53, 0x39, 0x70, 0x9f, 0x51, 0x4e, 0xf0, 0x5b, 0x30, 0x21, 0x5b,
	0xcf, 0xeb, 0x68, 0xee, 0xc8, 0xc2, 0xd4, 0x25, 0xa3, 0x99, 0x71, 0xde, 0xcd, 0x7b, 0xe2, 0xc9,
	0x96, 0xb9, 0xda, 0x83, 0x04, 0xf8, 0x3c, 0x9c, 0xa4, 0xe4, 0xd3, 0xb0, 0x93, 0x60, 0x52, 0x12,
	0x4c, 0xca, 0xfd, 0xf0, 0xda, 0x80, 0xcd, 0x35, 0x38, 0x75, 0x97, 0xc4, 0x5c, 0xe2, 0x76, 0x9c,
	0x83, 0x69, 0x99, 0xa8, 0x43, 0xcd, 0x2e, 0x91, 0x7d, 0x98, 0x92, 0xb1, 0x77, 0xcc, 0x2e, 0xd1,
	0x4d, 0xa8, 0xdd, 0x09, 0x88, 0x19, 0x92, 0x21, 0xe8, 0x2a, 0x9c, 0x90, 0xaf, 0x09, 0xd4, 0x21,
	0xf6, 0x10, 0xe3, 0xf5, 0x1b, 0x50, 0x5b, 0x21, 0x1e, 0x19, 0x29, 0x91, 0x83, 0xdd, 0x32, 0xbc,
	0xf4, 0x2e, 0xb5, 0x0f, 0x09, 0xb6, 0x61, 0x66, 0x04, 0x2c, 0x8f, 0xe8, 0x5f, 0xdc, 0xdd, 0xfb,
	0x30, 0xb3, 0xdf, 0xf8, 0x3b, 0x8c, 0x6e, 0xba, 0x4e, 0x7e, 0x8e, 0x7d, 0x01, 0x5a, 0x02, 0xd3,
	0x97, 0x69, 0x74, 0xb0, 0x13, 0x51, 0x60, 0xd5, 0xd6, 0x77, 0xe0, 0x74, 0x42, 0x60, 0x51, 0x6e,
	0x5e, 0x20, 0xb9, 0x2a, 0xe0, 0xd2, 0x90, 0x80, 0x55, 0xf1, 0x1f, 0x51, 0xc5, 0xaf, 0x3f, 0x41,
	0xa0, 0xa5, 0x15, 0x97, 0x0d, 0xbc, 0x09, 0x27, 0xe3, 0xea, 0x11, 0xdd, 0x58, 0xea, 0xd5, 0x64,
	0x23, 0xe3, 0x66, 0x55, 0xb8, 0x92, 0x25, 0xb7, 0xa8, 0x77, 0x41, 0x53, 0xc4, 0x59, 0xb8, 0xbd,
	0x2d, 0xa8, 0xa8, 0x34, 0x45, 0x9d, 0x03, 0x58, 0x96, 0x15, 0x96, 0xfa, 0xaf, 0x08, 0x4e, 0xaf,
	0xf7, 0x36, 0xba, 0x6e, 0x18, 0x05, 0xd6, 0xc5, 0xdc, 0x2c, 0x50, 0xbc, 0x0d, 0x65, 0x79, 0xb6,
	0xd1, 0xc8, 0x95, 0xb5, 0x2f, 0x66, 0x4a, 0x4d, 0xa9, 0x37, 0x6d, 0x25, 0x9e, 0xf0, 0x3c, 0x94,
	0xb7, 0x4c, 0xcf, 0xb5, 0xcd, 0x90, 0x74, 0x18, 0xf5, 0xb6, 0xc5, 0xb9, 0x4d, 0xb4, 0xa7, 0xe3,
	0xe0, 0x7d, 0xea, 0x6d, 0xeb, 0xef, 0x81, 0x96, 0x46, 0x5c, 0x1e, 0xdd, 0x68, 0x4f, 0x50, 0xee,
	0x9e, 0x3c, 0x45, 0xd0, 0x50, 0xc7, 0x05, 0xf3, 0x3c, 0xd6, 0x0b, 0x0b, 0x74, 0xe5, 0x36, 0x9c,
	0x08, 0x22, 0x90, 0xec, 0xc7, 0x42, 0x66, 0x3f, 0xe2, 0x22, 0x31, 0xb0, 0xaf, 0x8b, 0x84, 0x36,
	0xe5, 0xf2, 0xff, 0x75, 0x33, 0x9e, 0x21, 0x68, 0xa4, 0x56, 0x97, 0xfd, 0x5d, 0x81, 0x09, 0xc9,
	0x33, 0xbe, 0x13, 0xf9, 0x77, 0x38, 0x40, 0xe6, 0xbe, 0x22, 0x1f, 0x42, 0x3d, 0x31, 0xf7, 0x0b,
	0x9f, 0xc6, 0x2c, 0x80, 0x2c, 0xb9, 0x3f, 0x80, 0x26, 0x65, 0x64, 0xd5, 0xd6, 0x1f, 0x42, 0xed,
	0x4d, 0x6a, 0x6e, 0x78, 0xc5, 0xa7, 0x2f, 0x3e, 0x0b, 0x53, 0x16, 0xa3, 0xbc, 0xd7, 0x25, 0xc1,
	0x7e, 0x6a, 0x88, 0x43, 0xab, 0xb6, 0xfe, 0x01, 0xbc, 0xb8, 0xe2, 0xf2, 0xff, 0x28, 0xf9, 0xe7,
	0x08, 0x1a, 0x77, 0x09, 0xed, 0xfb, 0x98, 0xc1, 0xd4, 0xf0, 0x59, 0x30, 0x68, 0xcd, 0x65, 0x00,
	0x4a, 0x1e, 0xab, 0x17, 0xa0, 0x16, 0x1f, 0x53, 0x6c, 0x46, 0x9a, 0xb7, 0xe8, 0x76, 0x7b, 0x92,
	0x92, 0xc7, 0x51, 0x86, 0x3e, 0x88, 0x79, 0xb6, 0x3a, 0x49, 0x0e, 0x00, 0x31, 0xcf, 0x96, 0x57,
	0xe6, 0x6f, 0x04, 0x67, 0xd2, 0x99, 0x48, 0xbd, 0xe4, 0xd8, 0x6e, 0x05, 0x4a, 0x83, 0x5d, 0x96,
	0x5c, 0x1b, 0x3f, 0x80, 0x8a, 0xf5, 0x91, 0x49, 0x1d, 0xd2, 0x09, 0x44, 0x2e, 0x5e, 0x3f, 0x22,
	0x84, 0x96, 0x63, 0xb4, 0x08, 0x98, 0x64, 0x50, 0xb6, 0x12, 0x4f, 0x1c, 0xdf, 0x83, 0x29, 0xdb,
	0x35, 0x1d, 0xca, 0x78, 0xe8, 0x5a, 0xbc, 0x7e, 0x54, 0xa4, 0xbc, 0x90, 0x99, 0x72, 0x65, 0x80,
	0x69, 0x27, 0xf1, 0x97, 0x7e, 0xae, 0x42, 0x45, 0x9e, 0x6c, 0xf4, 0xed, 0x0c, 0xf0, 0x97, 0x08,
	0xa6, 0x93, 0x96, 0x09, 0x5f, 0xc9, 0xcc, 0x9e, 0xe2, 0xf2, 0xb4, 0xab, 0x05, 0x51, 0x51, 0xa3,
	0xf5, 0xda, 0x93, 0x3f, 0xff, 0xfa, 0xaa, 0x54, 0xc1, 0xd3, 0x09, 0x5b, 0xce, 0xf1, 0xb7, 0x08,
	0x60, 0xff, 0x06, 0xe1, 0x4b, 0x99, 0xb9, 0x47, 0x6c, 0x96, 0x56, 0xd4, 0x3c, 0xe8, 0xf3, 0x82,
	0xc9, 0x2c, 0x6e, 0x24, 0x99, 0x18, 0xbb, 0x49, 0x19, 0xec, 0xe1, 0xa7, 0x08, 0xca, 0xca, 0xac,
	0xc5, 0xd9, 0xfb, 0x4e, 0xb3, 0x72, 0xda, 0x6c, 0x0c, 0x4b, 0x78, 0xfc, 0xe6, 0xfd, 0xd8, 0xe3,
	0xeb, 0xb3, 0x82, 0xcc, 0x8c, 0xae, 0xb4, 0xa5, 0x15, 0xfb, 0x1b, 0xfc, 0x05, 0x82, 0xb2, 0x62,
	0xdf, 0x72, 0xd0, 0x48, 0xb3, 0x7b, 0x59, 0x34, 0x64, 0x4f, 0x16, 0xc7, 0xf6, 0xe4, 0x39, 0x82,
	0x93, 0x43, 0x9e, 0x0e, 0x5f, 0xcf, 0xa4, 0x93, 0x6e, 0x21, 0xb3, 0x08, 0xbd, 0x26, 0x08, 0x9d,
	0xd7, 0x5f, 0x1e, 0x43, 0xa8, 0xd5, 0x93, 0xa9, 0xf1, 0x6f, 0x08, 0xf0, 0xa8, 0x5f, 0xc2, 0xad,
	0x22, 0x52, 0x55, 0x1d, 0x9e, 0xb6, 0x7c, 0x28, 0xac, 0x14, 0xfb, 0x05, 0xc1, 0xfe, 0x15, 0x3c,
	0x3f, 0x86, 0xbd, 0x21, 0xad, 0x1b, 0xfe, 0x0e, 0xc1, 0x0b, 0xc3, 0x26, 0x16, 0xbf, 0x5e, 0xe0,
	0x26, 0x28, 0xc6, 0x4c, 0x4b, 0x73, 0x12, 0xfa, 0x75, 0x41, 0x68, 0x09, 0x1b, 0x39, 0x08, 0x19,
	0xbb, 0x03, 0x53, 0xbc, 0x87, 0x7f, 0x40, 0x50, 0x4d, 0x71, 0x81, 0x78, 0xb9, 0xd8, 0x6d, 0xc8,
	0x41, 0x71, 0x59, 0x50, 0xbc, 0xaa, 0xe7, 0xe9, 0x59, 0x6b, 0xc8, 0x44, 0xe1, 0x1f, 0x11, 0xe0,
	0x51, 0xd7, 0x95, 0x43, 0x00, 0x07, 0x7a, 0xcc, 0x2c, 0x81, 0x5e, 0x15, 0x74, 0x0d, 0x7d, 0x31,
	0x0f, 0x5d, 0x2e, 0xaa, 0xb4, 0xd0, 0x22, 0xfe, 0x5d, 0xfd, 0xed, 0x1c, 0xfb, 0x17, 0x5c, 0x48,
	0x6e, 0x43, 0x9e, 0x4b, 0xbb, 0x79, 0x38, 0xb0, 0x14, 0xab, 0xbc, 0x6a, 0x78, 0xdc, 0x55, 0x33,
	0x06, 0xd6, 0xe8, 0x17, 0xa4, 0xfc, 0xd6, 0x8d, 0xc2, 0xf8, 0x46, 0x91, 0xc1, 0xad, 0xf8, 0x24,
	0x2d, 0xb7, 0x3f, 0xd3, 0x6f, 0x08, 0xa2, 0x97, 0xf1, 0x52, 0x1e, 0xa2, 0xc6, 0xee, 0xbe, 0xb5,
	0xda, 0xc3, 0x3f, 0xa1, 0xe1, 0x5f, 0xda, 0x92, 0xf8, 0xcd, 0x82, 0x53, 0x5d, 0xe5, 0x9e, 0x53,
	0x23, 0xb9, 0x3a, 0xdb, 0x8a, 0x0d, 0x36, 0xfe, 0x03, 0x41, 0x2d, 0xcd, 0xb4, 0xe4, 0x20, 0x3b,
	0xc6, 0x75, 0x69, 0x6f, 0x1c, 0x12, 0xad, 0xca, 0x44, 0x3f, 0xa7, 0x7c, 0xa9, 0x9c, 0x14, 0x48,
	0x5f, 0xe7, 0x5f, 0x23, 0x28, 0x2b, 0xe6, 0x35, 0xc7, 0x87, 0x2b, 0xcd, 0xec, 0x66, 0xb5, 0xf8,
	0xa2, 0x60, 0xf5, 0xaa, 0xae, 0x8f, 0xfb, 0x4e, 0x10, 0x91, 0xb8, 0x4f, 0xeb, 0x39, 0x82, 0x8a,
	0xea, 0x7b, 0xf1, 0xb5, 0x1c, 0x1e, 0x8b, 0x17, 0x27, 0xd6, 0x14, 0xc4, 0x16, 0xc6, 0x8e, 0xb3,
	0x96, 0x1d, 0x65, 0x6e, 0xa1, 0xc5, 0xdb, 0xdf, 0x20, 0x98, 0xb7, 0x58, 0x37, 0x8b, 0xcc, 0xed,
	0xaa, 0xea, 0xea, 0xd6, 0xfa, 0xc6, 0x77, 0x0d, 0x3d, 0x5c, 0x93, 0x38, 0x87, 0x79, 0x26, 0x75,
	0x9a, 0x2c, 0x70, 0x0c, 0x87, 0x50, 0x61, 0x8b, 0xe5, 0xbf, 0x92, 0xa6, 0xef, 0xf2, 0x03, 0xff,
	0x99, 0x5c, 0x1e, 0x09, 0x7e, 0x5f, 0x3a, 0x7a, 0xf7, 0xd6, 0xfa, 0xbd, 0x8d, 0xe3, 0x22, 0xc7,
	0xe5, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xf0, 0x70, 0x6f, 0x6b, 0x15, 0x00, 0x00,
}
